{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "managedClusters_wiz_aks_cluster_name": {
      "type": "String"
    },
    "networkInterfaces_mongo_vm740_z1_name": {
      "type": "String"
    },
    "networkSecurityGroups_mongo_vm_nsg_name": {
      "type": "String"
    },
    "publicIPAddresses_mongo_vm_ip_name": {
      "type": "String"
    },
    "registries_wiztaskyacr_name": {
      "type": "String"
    },
    "storageAccounts_wizstoragejavierlab_name": {
      "type": "String"
    },
    "userAssignedIdentities_wiz_aks_cluster_agentpool_externalid": {
      "type": "String"
    },
    "virtualMachines_mongo_vm_name": {
      "type": "String"
    },
    "virtualNetworks_mongo_vm_vnet_name": {
      "type": "String"
    }
  },
  "resources": [
    {
      "apiVersion": "2025-03-01-preview",
      "location": "eastus",
      "name": "[parameters('registries_wiztaskyacr_name')]",
      "properties": {
        "adminUserEnabled": true,
        "anonymousPullEnabled": false,
        "autoGeneratedDomainNameLabelScope": "Unsecure",
        "dataEndpointEnabled": false,
        "encryption": {
          "status": "disabled"
        },
        "metadataSearch": "Disabled",
        "networkRuleBypassOptions": "AzureServices",
        "policies": {
          "azureADAuthenticationAsArmPolicy": {
            "status": "enabled"
          },
          "exportPolicy": {
            "status": "enabled"
          },
          "quarantinePolicy": {
            "status": "disabled"
          },
          "retentionPolicy": {
            "days": 7,
            "status": "disabled"
          },
          "softDeletePolicy": {
            "retentionDays": 7,
            "status": "disabled"
          },
          "trustPolicy": {
            "status": "disabled",
            "type": "Notary"
          }
        },
        "publicNetworkAccess": "Enabled",
        "roleAssignmentMode": "LegacyRegistryPermissions",
        "zoneRedundancy": "Disabled"
      },
      "sku": {
        "name": "Basic",
        "tier": "Basic"
      },
      "type": "Microsoft.ContainerRegistry/registries"
    },
    {
      "apiVersion": "2024-05-01",
      "location": "eastus",
      "name": "[parameters('networkSecurityGroups_mongo_vm_nsg_name')]",
      "properties": {
        "securityRules": [
          {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_mongo_vm_nsg_name'), 'SSH')]",
            "name": "SSH",
            "properties": {
              "access": "Allow",
              "destinationAddressPrefix": "*",
              "destinationAddressPrefixes": [],
              "destinationPortRange": "22",
              "destinationPortRanges": [],
              "direction": "Inbound",
              "priority": 300,
              "protocol": "TCP",
              "sourceAddressPrefix": "*",
              "sourceAddressPrefixes": [],
              "sourcePortRange": "*",
              "sourcePortRanges": []
            },
            "type": "Microsoft.Network/networkSecurityGroups/securityRules"
          },
          {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_mongo_vm_nsg_name'), 'AllowAnyMongoDBInbound')]",
            "name": "AllowAnyMongoDBInbound",
            "properties": {
              "access": "Allow",
              "destinationAddressPrefix": "*",
              "destinationAddressPrefixes": [],
              "destinationPortRange": "27017",
              "destinationPortRanges": [],
              "direction": "Inbound",
              "priority": 310,
              "protocol": "TCP",
              "sourceAddressPrefix": "*",
              "sourceAddressPrefixes": [],
              "sourcePortRange": "*",
              "sourcePortRanges": []
            },
            "type": "Microsoft.Network/networkSecurityGroups/securityRules"
          }
        ]
      },
      "type": "Microsoft.Network/networkSecurityGroups"
    },
    {
      "apiVersion": "2024-05-01",
      "location": "eastus",
      "name": "[parameters('publicIPAddresses_mongo_vm_ip_name')]",
      "properties": {
        "idleTimeoutInMinutes": 4,
        "ipAddress": "51.8.117.117",
        "ipTags": [],
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static"
      },
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "type": "Microsoft.Network/publicIPAddresses",
      "zones": [
        "1"
      ]
    },
    {
      "apiVersion": "2024-05-01",
      "location": "eastus",
      "name": "[parameters('virtualNetworks_mongo_vm_vnet_name')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "enableDdosProtection": false,
        "privateEndpointVNetPolicies": "Disabled",
        "subnets": [
          {
            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_mongo_vm_vnet_name'), 'default')]",
            "name": "default",
            "properties": {
              "addressPrefix": "10.0.0.0/24",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            },
            "type": "Microsoft.Network/virtualNetworks/subnets"
          }
        ],
        "virtualNetworkPeerings": []
      },
      "type": "Microsoft.Network/virtualNetworks"
    },
    {
      "apiVersion": "2024-01-01",
      "kind": "StorageV2",
      "location": "eastus",
      "name": "[parameters('storageAccounts_wizstoragejavierlab_name')]",
      "properties": {
        "accessTier": "Hot",
        "allowBlobPublicAccess": true,
        "allowCrossTenantReplication": false,
        "allowSharedKeyAccess": true,
        "defaultToOAuthAuthentication": false,
        "dnsEndpointType": "Standard",
        "encryption": {
          "keySource": "Microsoft.Storage",
          "requireInfrastructureEncryption": false,
          "services": {
            "blob": {
              "enabled": true,
              "keyType": "Account"
            },
            "file": {
              "enabled": true,
              "keyType": "Account"
            }
          }
        },
        "largeFileSharesState": "Enabled",
        "minimumTlsVersion": "TLS1_2",
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow",
          "ipRules": [],
          "virtualNetworkRules": []
        },
        "publicNetworkAccess": "Enabled",
        "supportsHttpsTrafficOnly": false
      },
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "2024-11-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_mongo_vm740_z1_name'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "location": "eastus",
      "name": "[parameters('virtualMachines_mongo_vm_name')]",
      "properties": {
        "additionalCapabilities": {
          "hibernationEnabled": false
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        },
        "hardwareProfile": {
          "vmSize": "Standard_D2s_v3"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_mongo_vm740_z1_name'))]",
              "properties": {
                "deleteOption": "Detach"
              }
            }
          ]
        },
        "osProfile": {
          "adminUsername": "wizuser",
          "allowExtensionOperations": true,
          "computerName": "[parameters('virtualMachines_mongo_vm_name')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false,
            "patchSettings": {
              "assessmentMode": "ImageDefault",
              "automaticByPlatformSettings": {
                "rebootSetting": "IfRequired"
              },
              "patchMode": "AutomaticByPlatform"
            },
            "provisionVMAgent": true
          },
          "requireGuestProvisionSignal": true,
          "secrets": []
        },
        "storageProfile": {
          "dataDisks": [],
          "diskControllerType": "SCSI",
          "imageReference": {
            "offer": "0001-com-ubuntu-server-focal",
            "publisher": "canonical",
            "sku": "20_04-lts-gen2",
            "version": "latest"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "deleteOption": "Delete",
            "diskSizeGB": 30,
            "managedDisk": {
              "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_mongo_vm_name'), '_OsDisk_1_684c64eb9bba4405b63b53829000fdaa'))]",
              "storageAccountType": "Premium_LRS"
            },
            "name": "[concat(parameters('virtualMachines_mongo_vm_name'), '_OsDisk_1_684c64eb9bba4405b63b53829000fdaa')]",
            "osType": "Linux"
          }
        }
      },
      "type": "Microsoft.Compute/virtualMachines",
      "zones": [
        "1"
      ]
    },
    {
      "apiVersion": "2025-03-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_wiztaskyacr_name'))]"
      ],
      "name": "[concat(parameters('registries_wiztaskyacr_name'), '/_repositories_admin')]",
      "properties": {
        "actions": [
          "repositories/*/metadata/read",
          "repositories/*/metadata/write",
          "repositories/*/content/read",
          "repositories/*/content/write",
          "repositories/*/content/delete"
        ],
        "description": "Can perform all read, write and delete operations on the registry"
      },
      "type": "Microsoft.ContainerRegistry/registries/scopeMaps"
    },
    {
      "apiVersion": "2025-03-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_wiztaskyacr_name'))]"
      ],
      "name": "[concat(parameters('registries_wiztaskyacr_name'), '/_repositories_pull')]",
      "properties": {
        "actions": [
          "repositories/*/content/read"
        ],
        "description": "Can pull any repository of the registry"
      },
      "type": "Microsoft.ContainerRegistry/registries/scopeMaps"
    },
    {
      "apiVersion": "2025-03-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_wiztaskyacr_name'))]"
      ],
      "name": "[concat(parameters('registries_wiztaskyacr_name'), '/_repositories_pull_metadata_read')]",
      "properties": {
        "actions": [
          "repositories/*/content/read",
          "repositories/*/metadata/read"
        ],
        "description": "Can perform all read operations on the registry"
      },
      "type": "Microsoft.ContainerRegistry/registries/scopeMaps"
    },
    {
      "apiVersion": "2025-03-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_wiztaskyacr_name'))]"
      ],
      "name": "[concat(parameters('registries_wiztaskyacr_name'), '/_repositories_push')]",
      "properties": {
        "actions": [
          "repositories/*/content/read",
          "repositories/*/content/write"
        ],
        "description": "Can push to any repository of the registry"
      },
      "type": "Microsoft.ContainerRegistry/registries/scopeMaps"
    },
    {
      "apiVersion": "2025-03-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_wiztaskyacr_name'))]"
      ],
      "name": "[concat(parameters('registries_wiztaskyacr_name'), '/_repositories_push_metadata_write')]",
      "properties": {
        "actions": [
          "repositories/*/metadata/read",
          "repositories/*/metadata/write",
          "repositories/*/content/read",
          "repositories/*/content/write"
        ],
        "description": "Can perform all read and write operations on the registry"
      },
      "type": "Microsoft.ContainerRegistry/registries/scopeMaps"
    },
    {
      "apiVersion": "2025-02-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_mongo_vm_vnet_name'), 'default')]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "location": "eastus",
      "name": "[parameters('managedClusters_wiz_aks_cluster_name')]",
      "properties": {
        "agentPoolProfiles": [
          {
            "count": 1,
            "enableAutoScaling": false,
            "enableEncryptionAtHost": false,
            "enableFIPS": false,
            "enableNodePublicIP": false,
            "enableUltraSSD": false,
            "kubeletDiskType": "OS",
            "maxPods": 30,
            "mode": "System",
            "name": "nodepool1",
            "orchestratorVersion": "1.31",
            "osDiskSizeGB": 128,
            "osDiskType": "Managed",
            "osSKU": "Ubuntu",
            "osType": "Linux",
            "powerState": {
              "code": "Running"
            },
            "scaleDownMode": "Delete",
            "securityProfile": {
              "enableSecureBoot": false,
              "enableVTPM": false
            },
            "type": "VirtualMachineScaleSets",
            "upgradeSettings": {
              "maxSurge": "10%"
            },
            "vmSize": "Standard_DS2_v2",
            "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_mongo_vm_vnet_name'), 'default')]"
          }
        ],
        "autoUpgradeProfile": {
          "nodeOSUpgradeChannel": "NodeImage"
        },
        "bootstrapProfile": {
          "artifactSource": "Direct"
        },
        "disableLocalAccounts": false,
        "dnsPrefix": "wiz-aks-cl-wiz-test-rg-17a02a",
        "enableRBAC": true,
        "identityProfile": {
          "kubeletidentity": {
            "clientId": "e2e5fdd5-f806-4a72-8ad1-e9d18a64ed15",
            "objectId": "e4fb784a-64e5-47c4-853b-4a2449e42adc",
            "resourceId": "[parameters('userAssignedIdentities_wiz_aks_cluster_agentpool_externalid')]"
          }
        },
        "kubernetesVersion": "1.31",
        "linuxProfile": {
          "adminUsername": "azureuser",
          "ssh": {
            "publicKeys": [
              {
                "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCbfMOuDS5Iha8kL+H86eaDNTbiDyaBschDX10/STVsuHhz9miBvEwJpGs0ULngfLYlhFrBEJz8av+w77VvdAd3kdbkH2Feep7t1OTkSOf//55Ko+/5qqI2xkmLTp7aIP4tjpnsNwqeCd8Mc06lRlW3UN7aHV3xCzaLkayTa+Vt4pGSPKe0tAsSPzDxnP1ksB7A/Ws3v8542kuWU39Tm258BlgSvZA3zu5UFnuPutG57o9Tv32xH05gPG4ex8tqV7NzlXRRzFPfMR5lNPhXL8cLb+/nej30gv6Odr1ensCsJQ4szzPeu9g35L0itJ4xKPppdvijc/rBxPcs3xCHvuqL"
              }
            ]
          }
        },
        "metricsProfile": {
          "costAnalysis": {
            "enabled": false
          }
        },
        "networkProfile": {
          "dnsServiceIP": "10.1.0.10",
          "ipFamilies": [
            "IPv4"
          ],
          "loadBalancerProfile": {
            "backendPoolType": "nodeIPConfiguration",
            "managedOutboundIPs": {
              "count": 1
            }
          },
          "loadBalancerSku": "standard",
          "networkDataplane": "azure",
          "networkPlugin": "azure",
          "networkPolicy": "none",
          "outboundType": "loadBalancer",
          "serviceCidr": "10.1.0.0/16",
          "serviceCidrs": [
            "10.1.0.0/16"
          ]
        },
        "nodeResourceGroup": "[concat('MC_wiz-test-rg_', parameters('managedClusters_wiz_aks_cluster_name'), '_eastus')]",
        "oidcIssuerProfile": {
          "enabled": false
        },
        "securityProfile": {},
        "servicePrincipalProfile": {
          "clientId": "msi"
        },
        "storageProfile": {
          "diskCSIDriver": {
            "enabled": true
          },
          "fileCSIDriver": {
            "enabled": true
          },
          "snapshotController": {
            "enabled": true
          }
        },
        "supportPlan": "KubernetesOfficial",
        "windowsProfile": {
          "adminUsername": "azureuser",
          "enableCSIProxy": true
        },
        "workloadAutoScalerProfile": {}
      },
      "sku": {
        "name": "Base",
        "tier": "Free"
      },
      "type": "Microsoft.ContainerService/managedClusters"
    },
    {
      "apiVersion": "2024-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_mongo_vm_nsg_name'))]"
      ],
      "name": "[concat(parameters('networkSecurityGroups_mongo_vm_nsg_name'), '/AllowAnyMongoDBInbound')]",
      "properties": {
        "access": "Allow",
        "destinationAddressPrefix": "*",
        "destinationAddressPrefixes": [],
        "destinationPortRange": "27017",
        "destinationPortRanges": [],
        "direction": "Inbound",
        "priority": 310,
        "protocol": "TCP",
        "sourceAddressPrefix": "*",
        "sourceAddressPrefixes": [],
        "sourcePortRange": "*",
        "sourcePortRanges": []
      },
      "type": "Microsoft.Network/networkSecurityGroups/securityRules"
    },
    {
      "apiVersion": "2024-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_mongo_vm_nsg_name'))]"
      ],
      "name": "[concat(parameters('networkSecurityGroups_mongo_vm_nsg_name'), '/SSH')]",
      "properties": {
        "access": "Allow",
        "destinationAddressPrefix": "*",
        "destinationAddressPrefixes": [],
        "destinationPortRange": "22",
        "destinationPortRanges": [],
        "direction": "Inbound",
        "priority": 300,
        "protocol": "TCP",
        "sourceAddressPrefix": "*",
        "sourceAddressPrefixes": [],
        "sourcePortRange": "*",
        "sourcePortRanges": []
      },
      "type": "Microsoft.Network/networkSecurityGroups/securityRules"
    },
    {
      "apiVersion": "2024-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_mongo_vm_vnet_name'))]"
      ],
      "name": "[concat(parameters('virtualNetworks_mongo_vm_vnet_name'), '/default')]",
      "properties": {
        "addressPrefix": "10.0.0.0/24",
        "delegations": [],
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      },
      "type": "Microsoft.Network/virtualNetworks/subnets"
    },
    {
      "apiVersion": "2024-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_wizstoragejavierlab_name'))]"
      ],
      "name": "[concat(parameters('storageAccounts_wizstoragejavierlab_name'), '/default')]",
      "properties": {
        "containerDeleteRetentionPolicy": {
          "days": 7,
          "enabled": true
        },
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "allowPermanentDelete": false,
          "days": 7,
          "enabled": true
        }
      },
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "type": "Microsoft.Storage/storageAccounts/blobServices"
    },
    {
      "apiVersion": "2024-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_wizstoragejavierlab_name'))]"
      ],
      "name": "[concat(parameters('storageAccounts_wizstoragejavierlab_name'), '/default')]",
      "properties": {
        "cors": {
          "corsRules": []
        },
        "protocolSettings": {
          "smb": {}
        },
        "shareDeleteRetentionPolicy": {
          "days": 7,
          "enabled": true
        }
      },
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "type": "Microsoft.Storage/storageAccounts/fileServices"
    },
    {
      "apiVersion": "2024-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_wizstoragejavierlab_name'))]"
      ],
      "name": "[concat(parameters('storageAccounts_wizstoragejavierlab_name'), '/default')]",
      "properties": {
        "cors": {
          "corsRules": []
        }
      },
      "type": "Microsoft.Storage/storageAccounts/queueServices"
    },
    {
      "apiVersion": "2024-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_wizstoragejavierlab_name'))]"
      ],
      "name": "[concat(parameters('storageAccounts_wizstoragejavierlab_name'), '/default')]",
      "properties": {
        "cors": {
          "corsRules": []
        }
      },
      "type": "Microsoft.Storage/storageAccounts/tableServices"
    },
    {
      "apiVersion": "2025-02-01",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerService/managedClusters', parameters('managedClusters_wiz_aks_cluster_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_mongo_vm_vnet_name'), 'default')]"
      ],
      "name": "[concat(parameters('managedClusters_wiz_aks_cluster_name'), '/nodepool1')]",
      "properties": {
        "count": 1,
        "enableAutoScaling": false,
        "enableEncryptionAtHost": false,
        "enableFIPS": false,
        "enableNodePublicIP": false,
        "enableUltraSSD": false,
        "kubeletDiskType": "OS",
        "maxPods": 30,
        "mode": "System",
        "orchestratorVersion": "1.31",
        "osDiskSizeGB": 128,
        "osDiskType": "Managed",
        "osSKU": "Ubuntu",
        "osType": "Linux",
        "powerState": {
          "code": "Running"
        },
        "scaleDownMode": "Delete",
        "securityProfile": {
          "enableSecureBoot": false,
          "enableVTPM": false
        },
        "type": "VirtualMachineScaleSets",
        "upgradeSettings": {
          "maxSurge": "10%"
        },
        "vmSize": "Standard_DS2_v2",
        "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_mongo_vm_vnet_name'), 'default')]"
      },
      "type": "Microsoft.ContainerService/managedClusters/agentPools"
    },
    {
      "apiVersion": "2024-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_wizstoragejavierlab_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_wizstoragejavierlab_name'))]"
      ],
      "name": "[concat(parameters('storageAccounts_wizstoragejavierlab_name'), '/default/backups')]",
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "immutableStorageWithVersioning": {
          "enabled": false
        },
        "publicAccess": "Container"
      },
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers"
    },
    {
      "apiVersion": "2024-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_mongo_vm_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_mongo_vm_vnet_name'), 'default')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_mongo_vm_nsg_name'))]"
      ],
      "kind": "Regular",
      "location": "eastus",
      "name": "[parameters('networkInterfaces_mongo_vm740_z1_name')]",
      "properties": {
        "auxiliaryMode": "None",
        "auxiliarySku": "None",
        "disableTcpStateTracking": false,
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": true,
        "enableIPForwarding": false,
        "ipConfigurations": [
          {
            "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_mongo_vm740_z1_name')), '/ipConfigurations/ipconfig1')]",
            "name": "ipconfig1",
            "properties": {
              "primary": true,
              "privateIPAddress": "10.0.0.4",
              "privateIPAddressVersion": "IPv4",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_mongo_vm_ip_name'))]",
                "properties": {
                  "deleteOption": "Detach"
                }
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_mongo_vm_vnet_name'), 'default')]"
              }
            },
            "type": "Microsoft.Network/networkInterfaces/ipConfigurations"
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_mongo_vm_nsg_name'))]"
        },
        "nicType": "Standard"
      },
      "type": "Microsoft.Network/networkInterfaces"
    }
  ],
  "variables": {}
}
